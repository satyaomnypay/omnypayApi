{
    "swagger": "2.0",
    "info": {
        "description": "OmnyPay is a Retailer friendly white label mobile payment system that enables shoppers pay retailer across omnichannels and omni devices. OmnyPay version 2.0 API supports a retailer mobile or web commerce application to connect to Omnypay Cloud Payment Service.   If you are interested in hearing more about Omnypay, please contact info@omnypay.net. \n* OmnyPay is our integrated, customizable, and secure mobile payment and loyalty platform works with a retailer to reward their loyal customers, lower payment transaction costs, and increase sales. OmnyPay is a retailer friendly, mobile payment system designed with the retailer in mind. Works seamlessly across all channels NFC equipped stores, non-NFC stores, e-Commerce sites, and native mobile apps.\nSupports all payment types such as store card, private label credit cards, debit cards, credit cards, and ACH.\n* OmnyPay provides these easy APIs to speed up development. A credential is included for quick development and integration testing. Use following key, rpw6tm0awkz-u06o0lmabgcmlik2hjb9 for testing.\n \nTerminology\n\n\n* Retailer - Any retailer that has a brick and mortar or ecommerce store can avail of OmnyPay service. For our example we will call our retailer CoolStore.\n\n\n* Retailer Mobile App - the branded mobile application available  in Apple App Store or Android Play store. For our example Cool Store has a branded mobile app - CoolStore App \n\n\n* Customer - A shopper of CoolStore Store or eCommerce sites. \n\n\n* CoolPay - A mobile payment service that uses OmnyPay payment system to seamlessly integrate customer loyalty, rewards and promotions across multiple channels and steer shoppers to use Store Cards.\n\nOur Interfaces  \n   Retailer Systems <-POS API->Omnypay Platform<-Mobile API-> Retailer Mobile App \n* Retailer Systems - The Commerce systems in the backend and the Point of Service systems that enable transactions in-store and on commerce sites. \n* POS API - Set of API between OmnyPay Platform and Retailer Systems. \n* OmnyPay Platform - A REST based API and platform that supports Mobile Payment for Retailers using their branded applications.\n* OmnyPay Mobile API -  consists of User Management API and Mobile transactions API. \n* Retailer Mobile App - The branded application used by shoppers on their mobile phone ex: Coolstore App\n",
        "version": "2.0.0",
        "title": "OmnyPay API - Powering OmniChannel Retailers",
        "termsOfService": "http://omnypay.net/api/terms.html",
        "contact": {
            "email": "info@omnypay.net"
        },
        "license": {
            "name": "Omnypay License",
            "url": "http://omnypay.net/licenses/LICENSE.html"
        }
    },
    "host": "121.244.157.170:8777",
    "basePath": "/mobileApp/rest",
    "tags": [
        {
            "name": "User Management",
            "description": "User management API for those retail customers who want to use Omnypay for user account and profile managemen including user registration, setup features, adding payment instruments.",
            "externalDocs": {
                "description": "API for mobile app to support user management in Omnypay",
                "url": "http://omnypay.net"
            }
        },
        {
            "name": "Mobile Transactions",
            "description": "Mobile side API, for transaction processing while shopping between mobile app or eCommerce app and OmnyPay Cloud."
        },
        {
            "name": "POS Transactions",
            "description": "POS side APIs, for transaction processing while shopping, between Retailer POS and OmnyPay Cloud.",
            "externalDocs": {
                "description": "Find out more about OmnyPay",
                "url": "http://omnypay.net"
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/user/": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Add a new user to OmnyPay",
                "description": "",
                "operationId": "addUser",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "appUserProfile",
                        "description": "User Info required for authentication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appUserProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appUserRegisterResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update an existing user profile",
                "description": "",
                "operationId": "updateUserInfo",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Update an existing user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appChangeUserProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appUserRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid password supplied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/users/{user_id}/card": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Add a Card",
                "description": "Adds a credit, debit, store or gift card to user account.",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "ID of user that needs to be fetched",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "status",
                        "description": "Info about card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appCardInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appCRef"
                        }
                    },
                    "400": {
                        "description": "Invalid Card Data"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/user/logout": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Logout a user from OmnyPay",
                "description": "Logout of a Omnypay session",
                "operationId": "logout",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User Info required for authentication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appUserProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "User not logged in"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Login a user to OmnyPay",
                "description": "Login  a user for Omnypay session",
                "operationId": "login",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User Info required for authentication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appUserProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful  operation",
                        "schema": {
                            "$ref": "#/definitions/appUserRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "User not logged in"
                    }
                },
                "security": [
                    {
                        "api-key": "1upqbzm8zgi80rwuc9n34vsofsis3vs-"
                    }
                ]
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Register a Merchant User Id(like CoolStore Id) in OmnyPay",
                "description": "When registering first time a Merchant user id, OmnyPay will create an OmnyPay user object and return a mapped user_id. If a merchant user Id is already provisioned then it will return the internal user Id and any card Reference associated with the user_id",
                "operationId": "register",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User Info required for authentication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appMUserIdProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appUserRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "User not logged in"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    }
                ]
            }
        },
        "/users/{user_id}/Questions": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Set Security Questions",
                "description": "Select order of security questions and set answers to each question.",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "User id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "profileAndQuestions",
                        "description": "User Authentication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appProfileAndQuestions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    },
                    {
                        "omnypay_auth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Set Security Questions",
                "description": "Select order of security questions and set answers to each question.",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "User id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "profileAndQuestions",
                        "description": "User Authentication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appProfileAndQuestions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    },
                    {
                        "omnypay_auth": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get Security Questions",
                "description": "Get atleast two security questions for user verification",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "User id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appAskQuestions"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    },
                    {
                        "omnypay_auth": []
                    }
                ]
            }
        },
        "/users/{user_id}/answerQuestions": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Answer Security Questions",
                "description": "Answer two security questions for user verification",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "User id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User Validation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appAnswerQuestions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    },
                    {
                        "omnypay_auth": []
                    }
                ]
            }
        },
        "/password/forgot": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Forgot Password, get questions to answer",
                "description": "Forgot Password, get answers for two questions asked",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appAskQuestions"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    }
                ]
            }
        },
        "/users/{user_id}/bankAcct": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Add a Bank Account",
                "description": "Adds a bank account, savings or checking to user account.",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "ID of user that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add Bank Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appBankInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appCRef"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete a Account",
                "description": "Deletes a bank, debit, credit, gift or store card account",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "ID of user that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Add Bank Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appCRef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    }
                ]
            }
        },
        "/users/{user_id}/checkin": {
            "post": {
                "tags": [
                    "Mobile Transactions"
                ],
                "summary": "Check in the user",
                "description": "User checks into the POS by scanning the QR Code at the register. The information about the terminal/POS at the store is passed as POS Info object to OmnyPay",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "ID of user that needs to be fetched",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "POS Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appPOSInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appCheckInResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    },
                    {
                        "clientstore_auth": []
                    }
                ]
            }
        },
        "/users/{user_id}/LineItemsAndAmounts": {
            "get": {
                "tags": [
                    "Mobile Transactions"
                ],
                "summary": "Get Line items and Amounts",
                "description": "Called by Mobile App to get line items and total amount from OmnyPay Platform",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "ID of user that is due the amount",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/POSAmountRequest"
                        }
                    }
                }
            }
        },
        "/POS/{pos_id}/postLineItemsAndAmounts": {
            "post": {
                "tags": [
                    "POS Transactions"
                ],
                "summary": "Submit Line Items and Amounts from POS",
                "description": "This call submits line items and amount for transaction payment.",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pos_id",
                        "description": "ID of POS that is posting Amount due",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "amt",
                        "description": "POS Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/POSAmountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api-key": []
                    }
                ]
            }
        },
        "/POS/{pos_id}/applyLoyaltyRewardsOffers": {
            "post": {
                "tags": [
                    "POS Transactions"
                ],
                "summary": "Apply selected loyalty,rewards and offers to Amount for discounts",
                "description": "This request is outbound from OmnyPay to the POS. Your POS should support such a request so as to allow OmnyPay to send the loyalty, rewards and offers to be applied on the transaction.",
                "operationId": "applyLROAtPOS",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of POS that needs to be fetched",
                        "name": "pos_id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "LoyaltyPoints",
                        "description": "Apply Loyalty Membership points for a user",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/LoyaltyRedemption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/POSAmountRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction"
                    }
                },
                "security": [
                    {
                        "clientstore_auth": [
                            "write:transactions",
                            "read:transactions"
                        ]
                    }
                ]
            }
        },
        "/POS/{pos_id}/payToken": {
            "post": {
                "tags": [
                    "POS Transactions"
                ],
                "summary": "Send Pay Token to POS",
                "description": "Send token to POS for settlement",
                "operationId": "sendPayToken",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of POS that needs to be fetched",
                        "name": "pos_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AmountWithToken",
                        "description": "AmountWithToken",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/POSAmountWithToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/POSAmountRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction"
                    }
                },
                "security": [
                    {
                        "clientstore_auth": [
                            "write:transactions",
                            "read:transactions"
                        ]
                    }
                ]
            }
        },
        "/users/{user_id}/LoyaltyRewardsOffers": {
            "get": {
                "tags": [
                    "Mobile Transactions"
                ],
                "summary": "Get Loyalty, Rewards and Offers for User",
                "description": "Fetch a list of loyalty, rewards and offers associated with the user.",
                "operationId": "getLRO",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "ID of user that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LRO"
                        }
                    },
                    "400": {
                        "description": "Invalid user"
                    },
                    "405": {
                        "description": "Not a valid session"
                    }
                },
                "security": [
                    {
                        "clientstore_auth": [
                            "write:transactions",
                            "read:transactions"
                        ]
                    }
                ]
            }
        },
        "/users/{user_id}/applyLoyaltyRewardsOffers": {
            "post": {
                "tags": [
                    "Mobile Transactions"
                ],
                "summary": "Apply selected Loyalty, Rewards and Offers to Amount for transaction at POS",
                "description": "Apply selected rewards, loyalty points and coupons  for transaction",
                "operationId": "applyLRO",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of user that needs to be fetched",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "couponsToRedeem",
                        "description": "Apply coupons for a user",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/LRO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/POSAmountRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction"
                    }
                },
                "security": [
                    {
                        "clientstore_auth": [
                            "write:transactions",
                            "read:transactions"
                        ]
                    }
                ]
            }
        },
        "/users/{user_id}/confirmPayment": {
            "post": {
                "tags": [
                    "Mobile Transactions"
                ],
                "summary": "pay specified Amount for transaction",
                "description": "Confirm payment for the specified amount for transaction",
                "operationId": "payAmount",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of user that needs to be fetched",
                        "name": "user_id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Pay amount for products purchase",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/appPayAmountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/appPayAmountResponse"
                        }
                    },
                    "400": {
                        "description": "Transaction declined"
                    },
                    "404": {
                        "description": "User not recognized"
                    }
                },
                "security": [
                    {
                        "clientstore_auth": [
                            "write:transactions",
                            "read:transactions"
                        ]
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "clientstore_auth": {
            "type": "oauth2",
            "description": "OmnyPay uses OAuth 2.0 to secure access to the cloud. OAuth2 is a protocol that lets external apps request authorization to private details in a user’s GitHub account without getting their password. This is preferred over Basic Authentication because tokens can be limited to specific types of data, and can be revoked by users at any time.\n* All developers need to register their application before getting started. A registered OAuth application is assigned a unique Client ID and Client Secret. The Client Secret should not be shared. You may create a personal access token for your own use or implement the web flow below to allow other users to authorize your application.\n* OmnyPay OAuth implementation supports the standard authorization code grant type. Developers should implement the web application flow described below to obtain an authorization code and then exchange it for a token. (The implicit grant type is not supported.)",
            "authorizationUrl": "https://OmnyPay.net/login/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "write:transactions": "transact using your account",
                "read:transactions": "read information about account"
            }
        },
        "api-key": {
            "description": "API Key provided to the developer at the time of registration on the OmnyPay developer portal. ",
            "type": "apiKey",
            "name": "api-key",
            "in": "header"
        },
        "omnypay_auth": {
            "description": "API Key provided to the developer at the time of registration on the OmnyPay developer portal. ",
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "appUserProfile": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "emailId": {
                    "type": "string",
                    "description": "User email address"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Phone number beginning with area code"
                },
                "user_id": {
                    "type": "string",
                    "description": "user Id is a id that uniquely identifies the customer or shopper in retailer's system"
                },
                "passcode": {
                    "type": "string",
                    "description": "Password atleast 8 digits with a char, number and special characters"
                }
            },
            "xml": {
                "name": "UserProfile"
            }
        },
        "appMUserIdProfile": {
            "type": "object",
            "required": [
                "MUserid"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "emailId": {
                    "type": "string",
                    "description": "User email address"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Phone number beginning with area code"
                },
                "MUserid": {
                    "type": "string",
                    "description": "user Id is a id that uniquely identifies the customer or shopper in retailer's system"
                }
            },
            "xml": {
                "name": "MUserIdProfile"
            }
        },
        "appChangeUserProfile": {
            "type": "object",
            "properties": {
                "oldEmailId": {
                    "type": "string",
                    "description": "Old User email Id"
                },
                "newEmailId": {
                    "type": "string",
                    "description": "New User email Id"
                },
                "oldPhoneNumber": {
                    "type": "string",
                    "description": "Old phone number beginning with area code"
                },
                "newoldPhoneNumber": {
                    "type": "string",
                    "description": "New phone number beginning with area code"
                },
                "oldPasscode": {
                    "type": "string",
                    "description": "Original Password atleast 8 digits with a char, number and special characters"
                },
                "newPasscode": {
                    "type": "string",
                    "description": "New Password atleast 8 digits with a char, number and special characters"
                }
            },
            "xml": {
                "name": "ChangeUserProfile"
            }
        },
        "Reward": {
            "type": "object",
            "properties": {
                "rewardPointTotal": {
                    "type": "integer"
                },
                "rewardId": {
                    "type": "string"
                },
                "merchantId": {
                    "type": "string"
                },
                "validTo": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Reward"
            }
        },
        "Coupon": {
            "type": "object",
            "properties": {
                "couponId": {
                    "type": "string"
                },
                "skuId": {
                    "type": "string"
                },
                "merchantId": {
                    "type": "string"
                },
                "discountId": {
                    "type": "string"
                },
                "couponTitle": {
                    "type": "string"
                },
                "couponIssuerName": {
                    "type": "string"
                },
                "couponIssuerId": {
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "isValid": {
                    "type": "boolean",
                    "default": true
                },
                "redemptionsAllowed": {
                    "type": "integer",
                    "format": "integer32"
                },
                "comboValid": {
                    "type": "boolean",
                    "default": true
                },
                "discountDollar": {
                    "type": "number",
                    "format": "float"
                },
                "discountPercent": {
                    "type": "number",
                    "format": "float"
                },
                "countryCode": {
                    "type": "string"
                },
                "redemptionChannel": {
                    "type": "string"
                },
                "imageAsset": {
                    "type": "string",
                    "description": "path of the asset"
                },
                "buyX": {
                    "type": "number",
                    "format": "float"
                },
                "getFree": {
                    "type": "integer",
                    "format": "int32"
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "Coupon"
            }
        },
        "CouponRedemption": {
            "type": "object",
            "properties": {
                "couponId": {
                    "type": "string"
                },
                "qtyRequested": {
                    "type": "number",
                    "format": "integer32"
                },
                "redemptionValue": {
                    "description": "Percent Value or Dollar Value",
                    "type": "number",
                    "format": "float"
                },
                "redemptionType": {
                    "description": "0 for percent 1 for amount",
                    "type": "number",
                    "format": "integer32"
                }
            },
            "xml": {
                "name": "CouponRedemption"
            }
        },
        "RewardRedemption": {
            "type": "object",
            "properties": {
                "rewardId": {
                    "type": "string"
                },
                "redemptionValue": {
                    "description": "Percent Value or Dollar Value",
                    "type": "number",
                    "format": "float"
                },
                "redemptionType": {
                    "description": "0 for percent 1 for amount",
                    "type": "number",
                    "format": "integer32"
                }
            },
            "xml": {
                "name": "RewardRedemption"
            }
        },
        "LoyaltyRedemption": {
            "type": "object",
            "properties": {
                "loyaltyId": {
                    "type": "string"
                },
                "loyaltyPoints": {
                    "description": "Points earned",
                    "type": "number"
                },
                "pointConversion": {
                    "description": "the conversion ratio for points to currency",
                    "type": "number",
                    "format": "float"
                },
                "pointsRedeemed": {
                    "description": "the points redeemed for this transaction",
                    "type": "number",
                    "format": "float"
                },
                "dollarRedeemed": {
                    "description": "the dollars redeemed for this transaction",
                    "type": "number",
                    "format": "integer32"
                }
            },
            "xml": {
                "name": "LoyaltyRedemption"
            }
        },
        "Loyalty": {
            "type": "object",
            "properties": {
                "loyaltyId": {
                    "type": "string"
                },
                "loyaltyName": {
                    "type": "string",
                    "description": "Name of the loyalty level"
                },
                "loyaltyPoints": {
                    "description": "Points earned",
                    "type": "number"
                },
                "pointConversion": {
                    "description": "the conversion ratio for points to currency",
                    "type": "number",
                    "format": "float"
                }
            },
            "xml": {
                "name": "Loyalty"
            }
        },
        "LRO": {
            "type": "object",
            "properties": {
                "loyalty": {
                    "$ref": "#/definitions/Loyalty"
                },
                "rewards": {
                    "type": "array",
                    "xml": {
                        "name": "rewards",
                        "wrapped": true
                    },
                    "items": {
                        "$ref": "#/definitions/Reward"
                    }
                },
                "offers": {
                    "type": "array",
                    "xml": {
                        "name": "offers",
                        "wrapped": true
                    },
                    "items": {
                        "$ref": "#/definitions/Coupon"
                    }
                }
            },
            "xml": {
                "name": "LRO"
            }
        },
        "Purchase": {
            "type": "object",
            "properties": {
                "productSKU": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "qty": {
                    "type": "integer",
                    "format": "int64"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                },
                "couponDiscount": {
                    "type": "number",
                    "format": "float"
                },
                "itemTotal": {
                    "type": "number",
                    "format": "float"
                }
            },
            "xml": {
                "name": "Purchase"
            }
        },
        "POSAmountRequest": {
            "type": "object",
            "required": [
                "totalAmount",
                "tax"
            ],
            "properties": {
                "totalAmount": {
                    "type": "number",
                    "format": "float"
                },
                "discountsInDollar": {
                    "type": "number",
                    "format": "float"
                },
                "tax": {
                    "type": "number",
                    "format": "float"
                },
                "netAmount": {
                    "type": "number",
                    "format": "float"
                },
                "readyForPayment": {
                    "type": "boolean",
                    "description": "this flag is set if the associate is ready to accept payment"
                },
                "itemizedPurchases": {
                    "type": "array",
                    "xml": {
                        "name": "itemizedPurchases",
                        "wrapped": true
                    },
                    "items": {
                        "$ref": "#/definitions/Purchase"
                    }
                }
            },
            "xml": {
                "name": "TransactPOSResponse"
            }
        },
        "appPayAmountRequest": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "number",
                    "format": "float"
                },
                "cardRef": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PayPOSAmountRequest"
            }
        },
        "appPayAmountResponse": {
            "type": "object",
            "properties": {
                "paidTotal": {
                    "type": "number",
                    "format": "float"
                },
                "amountBalance": {
                    "type": "number",
                    "format": "float"
                },
                "cardBalance": {
                    "type": "number",
                    "format": "float"
                }
            },
            "xml": {
                "name": "PayPOSAmountResponse"
            }
        },
        "appUserRegisterResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "cards": {
                    "type": "array",
                    "xml": {
                        "name": "cards",
                        "wrapped": true
                    },
                    "items": {
                        "$ref": "#/definitions/appCRef"
                    }
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "RegisterResponse"
            }
        },
        "appCheckInResponse": {
            "type": "object",
            "required": [
                "transaction_id",
                "type",
                "message",
                "code"
            ],
            "properties": {
                "transaction_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "txnAmount": {
                    "type": "number",
                    "format": "float"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CheckInResponse"
            }
        },
        "appProfileAndQuestions": {
            "properties": {
                "phoneNumber": {
                    "type": "number",
                    "description": "Phone Number of User"
                },
                "emailId": {
                    "type": "string",
                    "description": "email address of User"
                },
                "questionId1": {
                    "type": "string",
                    "description": "secret question No. 1"
                },
                "answer1": {
                    "type": "string",
                    "description": "answer to secret question No. 1"
                },
                "questionId2": {
                    "type": "string",
                    "description": "secret question No. 2"
                },
                "answer2": {
                    "type": "string",
                    "description": "answer to secret question No. 2"
                },
                "questionId3": {
                    "type": "string",
                    "description": "secret question No. 3"
                },
                "answer3": {
                    "type": "string",
                    "description": "answer to secret question No. 3"
                },
                "questionId4": {
                    "type": "string",
                    "description": "secret question No. 4"
                },
                "answer4": {
                    "type": "string",
                    "description": "answer to secret question No. 5"
                },
                "questionId5": {
                    "type": "string",
                    "description": "secret question No. 5"
                }
            },
            "xml": {
                "name": "ProfileAndQuestions"
            }
        },
        "appAskQuestions": {
            "properties": {
                "questionId1": {
                    "type": "string",
                    "description": "secret question No. 1"
                },
                "questionId2": {
                    "type": "string",
                    "description": "secret question No. 2"
                },
                "questionId3": {
                    "type": "string",
                    "description": "secret question No. 3"
                },
                "questionId4": {
                    "type": "string",
                    "description": "secret question No. 4"
                }
            },
            "xml": {
                "name": "appAnsQuestions"
            }
        },
        "appAnswerQuestions": {
            "properties": {
                "questionId1": {
                    "type": "string",
                    "description": "secret question No. 1"
                },
                "answer1": {
                    "type": "string",
                    "description": "answer secret question No. 1"
                },
                "questionId2": {
                    "type": "string",
                    "description": "secret question No. 2"
                },
                "answer2": {
                    "type": "string",
                    "description": "answer secret question No. 2"
                },
                "questionId3": {
                    "type": "string",
                    "description": "secret question No. 3"
                },
                "answer3": {
                    "type": "string",
                    "description": "answer secret question No. 3"
                },
                "questionId4": {
                    "type": "string",
                    "description": "secret question No. 4"
                },
                "answer4": {
                    "type": "string",
                    "description": "answer secret question No. 3"
                }
            },
            "xml": {
                "name": "appAnsQuestions"
            }
        },
        "appCardInfo": {
            "properties": {
                "accType": {
                    "type": "integer",
                    "description": "0 for charge card, 1 for type of acct. MC/Visa/ 2 for Gift card"
                },
                "accNickName": {
                    "type": "string",
                    "description": "ex:\"Citi MASTERCARD\","
                },
                "acctHolderName": {
                    "type": "string",
                    "description": "Name of the card holder"
                },
                "accCardVfcCode": {
                    "type": "string",
                    "description": "Code at the back of card"
                },
                "cardNickName": {
                    "type": "string",
                    "description": "Nickname of the card holder"
                },
                "acctCardExpDate": {
                    "type": "string",
                    "description": "The month ex:\"04\" of expiry"
                },
                "acctCardExpYear": {
                    "type": "string",
                    "description": "The year ex:\"17\" of expiry"
                },
                "acctNo": {
                    "type": "string",
                    "description": "The acct number of the card holder"
                },
                "phoneNumber": {
                    "type": "number",
                    "description": "Phone Number of User"
                },
                "emailId": {
                    "type": "string",
                    "description": "email address of User"
                }
            },
            "xml": {
                "name": "CardInfo"
            }
        },
        "appBankInfo": {
            "properties": {
                "accType": {
                    "type": "integer",
                    "description": "ex:0 for bank"
                },
                "accBankType": {
                    "type": "string",
                    "description": "ex:Savings or Checking"
                },
                "accBankName": {
                    "type": "string",
                    "description": "ex:\"Citi\","
                },
                "acctHolderName": {
                    "type": "string",
                    "description": "Name of the bank acct holder"
                },
                "accBankRout": {
                    "type": "string",
                    "description": "Routing Number of Bank Acct"
                },
                "accZipcode": {
                    "type": "string",
                    "description": "zipcode of bank"
                },
                "accCity": {
                    "type": "string",
                    "description": "The city where bank is registered"
                },
                "accState": {
                    "type": "string",
                    "description": "The state where bank is registered"
                },
                "accStreet": {
                    "type": "string",
                    "description": "The street where bank is registered"
                },
                "acctNo": {
                    "type": "string",
                    "description": "The acct number of the card holder"
                },
                "imeiNo": {
                    "type": "string",
                    "description": "IMEI Number of User"
                },
                "phoneNumber": {
                    "type": "number",
                    "description": "Phone Number of User"
                },
                "emailId": {
                    "type": "string",
                    "description": "email address of User"
                }
            },
            "xml": {
                "name": "BankInfo"
            }
        },
        "appCRef": {
            "properties": {
                "tokenExpDate": {
                    "type": "string",
                    "description": "expiration date of the token in token array"
                },
                "accNickName": {
                    "type": "string",
                    "description": "nickname of the card or bank acct"
                },
                "token": {
                    "type": "array",
                    "description": "The tokens associated",
                    "$ref": "#/definitions/appCardTokens"
                },
                "udk": {
                    "type": "string",
                    "description": "the user defined key to encrypt"
                },
                "isFirstAcct": {
                    "type": "boolean",
                    "description": "flag to indicate if this is the first card"
                },
                "code": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CRefResponse"
            }
        },
        "appCardTokens": {
            "properties": {
                "tokenName": {
                    "type": "string",
                    "description": "the name of the token"
                },
                "tokenValue": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CardTokens"
            }
        },
        "appPOSInfo": {
            "properties": {
                "POSId": {
                    "type": "string",
                    "description": "The POS ID (ex:4554) or the IP address/Page Id(\"127.0.0.1;7204889ADA49DD30520E3B8766D1F980fftQ3\") from QR Code scanned"
                },
                "StoreId": {
                    "type": "string",
                    "description": "The store Id"
                },
                "CheckSum": {
                    "type": "string",
                    "description": "Unique checksum"
                }
            },
            "xml": {
                "name": "POSInfo"
            }
        },
        "POSAmountWithToken": {
            "properties": {
                "Total": {
                    "type": "number",
                    "format": "float"
                },
                "Token": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "posAmountToken"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about OmnyPay",
        "url": "http://OmnyPay.net"
    }
}
